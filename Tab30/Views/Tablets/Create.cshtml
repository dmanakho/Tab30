@model Tab30.ViewModels.TabletViewModel

@{
    ViewBag.Title = "Create Tablet";
}
<div class="container">

    <div class="row">
        <div class="my-5 col-10">
            <h4 class="text-primary">Add new Tablet</h4>
        </div>
    </div>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="row">
                <div class="col-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.TabletName, htmlAttributes: new { @class = "control-label col-md-6 text-primary font-weight-bold" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.TabletName, new { htmlAttributes = new { @class = "form-control col-md-12" } })
                            @Html.ValidationMessageFor(model => model.TabletName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Make, htmlAttributes: new { @class = "control-label col-md-6" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Make, new { htmlAttributes = new { @class = "form-control  col-md-12" } })
                            @Html.ValidationMessageFor(model => model.Make, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Model, htmlAttributes: new { @class = "control-label col-md-6" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Model, new { htmlAttributes = new { @class = "form-control  col-md-12" } })
                            @Html.ValidationMessageFor(model => model.Model, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.SerialNo, htmlAttributes: new { @class = "control-label col-md-6" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.SerialNo, new { htmlAttributes = new { @class = "form-control  col-md-12" } })
                            @Html.ValidationMessageFor(model => model.SerialNo, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.AssetTag, htmlAttributes: new { @class = "control-label col-md-6" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.AssetTag, new { htmlAttributes = new { @class = "form-control  col-md-12" } })
                            @Html.ValidationMessageFor(model => model.AssetTag, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.WarrantyExpiresOn, htmlAttributes: new { @class = "control-label col-md-6" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.WarrantyExpiresOn, new { htmlAttributes = new { @class = "form-control  col-md-12" } })
                            @Html.ValidationMessageFor(model => model.WarrantyExpiresOn, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.ADPEnabled)
                                @Html.LabelFor(model => model.ADPEnabled, htmlAttributes: new { @class = "control-label col-md-6" })
                                @Html.ValidationMessageFor(model => model.ADPEnabled, "", new { @class = "text-danger" })
                            </div>

                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.LocationID, "Location:", htmlAttributes: new { @class = "control-label col-md-6" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(m => m.LocationID, Model.Locations, "--select--", new { @class = "form-control select2-multiple  col-md-12" })
                            @Html.ValidationMessageFor(model => model.LocationID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.UserID, "Assigned User:", htmlAttributes: new { @class = "control-label col-md-6" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(m => m.UserID, Model.Users, "--select--", new { @class = "form-control select2-multiple  col-md-12" })
                            @Html.ValidationMessageFor(model => model.UserID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-primary" />
                    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-outline-primary" })
                </div>
            </div>
        </div>
    }

</div>
@section Scripts {

    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(
            function () {
                $(".select2-multiple").select2();
            });
    </script>
    }

