@*model IEnumerable<Tab30.Models.User>*@
@*model PagedList.IPagedList<Tab30.Models.User>*@
@model X.PagedList.IPagedList<Tab30.Models.User>
@using X.PagedList.Mvc
@using X.PagedList

<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Users";
}

<div class="row">
    <div class="my-5 offset-sm-1 col-sm-1">
        <h2 class="text-primary">Users</h2>
    </div>
    <div>
        @Html.ActionLink("Create New", "Create", "Users", null, new { @class = "col-12 my-5 btn btn-outline-primary" })
    </div>
</div>

@using (Html.BeginForm("Index", "Users", FormMethod.Get))
{
    <div class="form-group">
        <div class="form-inline ">
            <span class="text-muted">Find by name: @Html.TextBox("searchQuery", ViewBag.CurrentFilter as string, new { @class = "form-control" })</span>
            <input type="submit" value="Search" class="btn btn-default" />
        </div>
    </div>
}
<table class="table">
    <tr>
        <th>
            @*Html.DisplayNameFor(model => model.FirstName)*@
            First Name
        </th>
        <th>
            @*Html.ActionLink(Html.DisplayNameFor(model => model.LastName).ToString(), "Index", new { sortOrder = ViewBag.NameSortParm })*@
            @Html.ActionLink("Last Name", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @*Html.DisplayNameFor(model => model.UserName)*@
            User Name
        </th>
        <th>
            @*Html.DisplayNameFor(model => model.ClassOf)*@
            Class Of
        </th>
        <th>
            @*@Html.ActionLink(Html.DisplayNameFor(model => model.CreatedOn).ToString(), "Index", new { sortOrder = ViewBag.CreatedDateSortParm })
                Html.DisplayNameFor(model => model.CreatedOn)*@
            @Html.ActionLink("Created On", "Index", new { sortOrder = ViewBag.CreatedDateSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @*Html.ActionLink(Html.DisplayNameFor(model => model.UpdatedOn).ToString(), "Index", new { sortOrder = ViewBag.UpdatedDateSortParm })
                @Html.DisplayNameFor(model => model.UpdatedOn)*@
            @Html.ActionLink("Updated On", "Index", new { sortOrder = ViewBag.UpdatedDateSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UserName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ClassOf)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedOn)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UpdatedOn)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
                @Html.ActionLink("Details", "Details", new { id = item.ID }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.ID })
            </td>
        </tr>
    }

</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
